# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#    - if: $CI_COMMIT_BRANCH =~ /release_v\d+.\d+.\d+/
    - if: $CI_COMMIT_REF_PROTECTED

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.

stages:          # List of stages for jobs, and their order of execution
  - linting
  - docs

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

autopep:
  stage: linting
  script:
    - pip install isort
    - isort --check-only .

autopep:
  stage: linting
  script:
    - pip install autopep8
    - autopep8 --select=E1,E2,E3,E401,W1,W2,W3,E226,E24 --diff --recursive --exit-code config docs examples scripts src
    

#pylint:
#  stage: lint
#  script:
#    - pip install pylint
#    - pylint .

#pages:
#  stage: docs
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - pip install -r docs/rtd_requirements.txt
#    - cd docs
#    - make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
