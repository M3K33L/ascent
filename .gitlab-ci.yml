# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_REF_PROTECTED

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.

stages:          # List of stages for jobs, and their order of execution
  - lint
  - test
  - deploy

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

isort:
  stage: lint
  script:
    - pip install isort
    - isort --check-only config docs examples scripts src run

black:
  stage: lint
  script:
    - pip install black
    - black --check config docs examples scripts src run

#while in the process of adding more files remember to add done files
flake8:
  stage: lint
  script:
    - pip install flake8
    - flake8 src/core

test_docs:
  stage: test
  script:
  - pip install -U sphinx mock sphinx-rtd-theme
  - pip install -Ur docs/rtd_requirements.txt
  - cd docs/source; sphinx-build -W -b html . ../../public
  except:
  - master

pages:
  stage: deploy
  script:
  - pip install -U sphinx mock sphinx-rtd-theme
  - pip install -Ur docs/rtd_requirements.txt
  - cd docs/source; sphinx-build -W -b html . ../../public
  artifacts:
    paths:
    - public
  only:
  - master
