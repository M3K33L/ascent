{
    "pseudonym": "Lazega Dulin Nerve",
    "n_dimensions": 0,
    "active_srcs": {
      "LazegaDulin1.json": [[-0.5, 1, -0.5]],
      "default": [[1, -1]]
    },
    "fibers": {
      "mode": "MRG_Interpolate",
      "xy_trace_buffer": 5.0,
      "z_parameters": {
        "diameter": [5, 10],
        "full_nerve_length": true,
        "offset": 0,
        "absolute_offset": 0,
        "seed": 123
      },

      "xy_parameters": {
        "mode": "UNIFORM_DENSITY",
        "top_down": true,
        "target_density": 0.7,
        "minimum_number": 20,
        "seed": 123
      }
    },
    "waveform": {
      "global": {
        "dt": 0.05,
        "on": 5,
        "off": 55,
        "stop": 80
      },
  // NEED TO DECIDE ON ALL THIS FIRST
      // EXAMPLE WAVEFORM for MONOPHASIC_PULSE_TRAIN
      "MONOPHASIC_PULSE_TRAIN": {
        "pulse_width": Double,
        "pulse_repetition_freq": Double,
        "digits": Integer
      },
  
      // EXAMPLE WAVEFORM for SINUSOID
      "SINUSOID": {
        "pulse_repetition_freq": Double,
        "digits": Integer
      },
  
      // EXAMPLE WAVEFORM for BIPHASIC_FULL_DUTY
      "BIPHASIC_FULL_DUTY": {
        "pulse_repetition_freq": Double,
        "digits": Integer
      },
  
      // EXAMPLE WAVEFORM for BIPHASIC_PULSE_TRAIN
      "BIPHASIC_PULSE_TRAIN": {
        "pulse_width": Double,
        "inter_phase": Double,
        "pulse_repetition_freq": Double,
        "digits": Integer
      },
  
      // EXAMPLE WAVEFORM for BIPHASIC_PULSE_TRAIN_Q_BALANCED_UNEVEN_PW
      "BIPHASIC_PULSE_TRAIN_Q_BALANCED_UNEVEN_PW": {
        "pulse_width_1": Double,
        "pulse_width_2": Double,
        "inter_phase": Double,
        "pulse_repetition_freq": Double,
        "digits": Integer
      },
  
      // EXAMPLE WAVEFORM for EXPLICIT
      "EXPLICIT": {
        "index": Integer,
        "dt_atol": Double,
        "period_repeats ": Integer
      }
    },
    "intracellular_stim": {
      "times": {
        "pw": 0,
        "IntraStim_PulseTrain_delay": 0,
        "IntraStim_PulseTrain_dur": 0
      },
      "pulse_repetition_freq": 0,
      "amp": 0,
      "ind": 2
    },
    "saving": {
      "aploctime": true,
      "space": { // We probably want these things over space
        "vm": true,
        "gating": true,
        "times": [Double], // DEFINE THESE TIMES TO SAVE VM, H, M
      },
      "time": { // We probably want these things over time too
        "vm": true,
        "gating": true,
        "istim": false,
        "locs": [Double] OR String // yeah, this needs definitions too
      }
    },
  
    // EXAMPLE PROTOCOL for FINITE_AMPLITUDES
    "protocol": {
      "mode": "FINITE_AMPLITUDES",
      "initSS": Double,
      "dt_initSS": Double,
      "amplitudes": [Double, Double, ...],
      "threshold": {
        "value": Double,
        "ap_detect_location": Double
      }
    },
  
    // EXAMPLE PROTOCOL for ACTIVATION_THRESHOLD
    "protocol": {
      "mode": "ACTIVATION_THRESHOLD", //String
      "initSS": Double,
      "dt_initSS": Double,
      "threshold": {
        "value": Double,
        "n_min_aps": Integer,
        "ap_detect_location": Double
      },
      "bounds_search": { // This one is for Bralen to decide
        "mode": String,
        "top": Double,
        "bottom": Double,
        "step": Double
      },
      "termination_criteria": {
        "mode": "PERCENT_DIFFERENCE",
        "percent": 1
      }
    },
  
    // EXAMPLE PROTOCOL for BLOCK_THRESHOLD
    // Are we going to use this one or activation threshold?
    "protocol": {
      "mode": "BLOCK_THRESHOLD", // String
      "initSS": Double,
      "dt_initSS": Double,
      "threshold": {
        "value": Double,
        "n_min_aps": Integer,
        "ap_detect_location": Double
      },
      "bounds_search": { 
        "mode": String,
        "top": Double,
        "bottom": Double,
        "step": Double
      },
      "termination_criteria": {
        "mode": "PERCENT_DIFFERENCE",
        "percent": 1
      }
    }
    }
  }