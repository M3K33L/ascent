[
  {
    "code": 0,
    "text": "Invalid code (out of bounds, starting at index 1).",
    "source": "src.utils.Exceptionable"
  },
  {
    "code": 1,
    "text": "Path must be full file name if not generating new map.",
    "source": "src.core.Map"
  },
  {
    "code": 2,
    "text": "This is a test error!",
    "source": "src.Runner"
  },
  {
    "code": 3,
    "text": "Vector provided must be of shape (3,) (i.e. 1-dim)",
    "source": "src.core.Trace.shift"
  },
  {
    "code": 4,
    "text": "Write mode not supported or invalid",
    "source": "src.core.Trace.write"
  },
  {
    "code": 5,
    "text": "Points to append must have 3 columns (x, y, z)",
    "source": "src.core.Trace.append"
  },
  {
    "code": 6,
    "text": "Current implementation requires that all points in Trace have same z-value to create contour",
    "source": "src.core.Trace.contour or src.core.Trace.points_path or src.core.Trace.polygon"
  },
  {
    "code": 7,
    "text": "Exception while writing",
    "source": "src.core.Trace.write"
  },
  {
    "code": 8,
    "text": "Not all inner Traces fall within outer Trace",
    "source": "src.core.Fascicle.__init__"
  },
  {
    "code": 9,
    "text": "Intersecting traces found",
    "source": "src.core.Fascicle.__init__"
  },
  {
    "code": 10,
    "text": "Fascicle-fascicle intersection found",
    "source": "src.core.Slide.validation"
  },
  {
    "code": 11,
    "text": "Fascicle-nerve intersection found",
    "source": "src.core.Slide.validation"
  },
  {
    "code": 12,
    "text": "Not all fascicles fall within nerve",
    "source": "src.core.Slide.validation"
  },
  {
    "code": 13,
    "text": "Nonspecific validation failed",
    "source": "src.core.Slide.validation"
  },
  {
    "code": 14,
    "text": "Outer scale must be set if only one trace provided",
    "source": "src.core.Fascicle.__endoneurium_setup"
  },
  {
    "code": 15,
    "text": "Scale factor must be greater than 1",
    "source": "src.core.Fascicle.__endoneurium_setup"
  },
  {
    "code": 16,
    "text": "Invalid reshape mode.",
    "source": "src.core.Slide.reshaped_nerve"
  },
  {
    "code": 17,
    "text": "Invalid scale center string.",
    "source": "src.core.Trace.scale"
  },
  {
    "code": 18,
    "text": "Raw nerve micrograph does not exist.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 19,
    "text": "Scale bar for nerve micrograph does not exist.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 20,
    "text": "Outers only has not yet been developed.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 21,
    "text": "Inner mask required for input mode INNERS.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 22,
    "text": "Inner AND outer masks required for input mode INNER_AND_OUTER_SEPARATE.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 23,
    "text": "Compiled masks required for input mode INNER_AND_OUTER_COMPILED.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 24,
    "text": "NerveMode.NOT_PRESENT is not implemented.",
    "source": "src.core.Manager.populate"
  },
  {
    "code": 25,
    "text": "Invalid path to write Fascicle to.",
    "source": "src.core.Fascicle.write"
  },
  {
    "code": 26,
    "text": "Invalid path to write Slide to.",
    "source": "src.core.Slide.write"
  },
  {
    "code": 27,
    "text": "Path to slide must have already been created.",
    "source": "src.core.Manager.write"
  },
  {
    "code": 28,
    "text": "Unimplemented write mode.",
    "source": "src.core.Manager.write"
  },
  {
    "code": 29,
    "text": "Either factor or distance MUST be provided.",
    "source": "src.core.Trace.offset"
  },
  {
    "code": 30,
    "text": "That FiberZMode is not yet implemented.",
    "source": "src.core.Manager.fiber_xy_coordinates"
  },
  {
    "code": 31,
    "text": "That FiberZMode is not yet implemented.",
    "source": "src.core.Manager.fiber_z_coordinates"
  },
  {
    "code": 32,
    "text": "t_start, t_on, t_off, t_stop must be in order.",
    "source": "src.core.Waveform.validate_times"
  },
  {
    "code": 33,
    "text": "dt is too large to create waveforms.",
    "source": "src.core.Waveform.validate_times"
  },
  {
    "code": 34,
    "text": "WaveformMode chosen not yet implemented.",
    "source": "src.core.Waveform.generate"
  },
  {
    "code": 35,
    "text": "Pulse is longer than period (2x for biphasic).",
    "source": "src.core.Waveform.generate"
  },
  {
    "code": 36,
    "text": "2*Pulse + Interphase is longer than period.",
    "source": "src.core.Waveform.generate"
  },
  {
    "code": 37,
    "text": "Missing config required by run configuration!",
    "source": "src.Runner"
  },
  {
    "code": 38,
    "text": "Missing Config.SAMPLE configuration!",
    "source": "src.Sample.init_map"
  },
  {
    "code": 39,
    "text": "Cannot deform monofascicle",
    "source": "src.Slide.__init__"
  },
  {
    "code": 40,
    "text": "Cannot reposition without NerveMode.PRESENT",
    "source": "src.Slide.__init__"
  },
  {
    "code": 41,
    "text": "Method fascicles_too_close does not apply for monofascicle nerves",
    "source": "src.Slide"
  },
  {
    "code": 42,
    "text": "TBD",
    "source": "TBD"
  },
  {
    "code": 43,
    "text": "Method fascicle_nerve_intersection does not apply for monofascicle nerves",
    "source": "src.Slide"
  },
  {
    "code": 44,
    "text": "Method fascicles_outside_nerve does not apply for monofascicle nerves",
    "source": "src.Slide"
  },
  {
    "code": 45,
    "text": "Method reshaped_nerve does not apply for monofascicle nerves",
    "source": "src.Slide"
  },
  {
    "code": 46,
    "text": "Temperature required in degrees celsius",
    "source": "src.core.Waveform"
  },
  {
    "code": 47,
    "text": "Temperature dependent perineurium not yet implemented for high frequencies",
    "source": "src.core.Waveform"
  },
  {
    "code": 48,
    "text": "Rho perineurium method not implemented",
    "source": "src.core.Runner"
  },
  {
    "code": 49,
    "text": "active_srcs_list provided does not abide by current conservation",
    "source": "src.core.Simulation"
  },
  {
    "code": 50,
    "text": "active_srcs_list provided does not abide by unitary current input response",
    "source": "src.core.Simulation"
  },
  {
    "code": 51,
    "text": "cuff chosen is too small for nerve sample provided",
    "source": "src.core.Runner"
  },
  {
    "code": 52,
    "text": "Invalid query config file (either does not exist or does not end in '.json')",
    "source": "src.core.Query"
  },
  {
    "code": 53,
    "text": "Must call Query.run() before fetching result via Query.summary()",
    "source": "src.core.Query"
  },
  {
    "code": 54,
    "text": "Criterion key not found in data (see above)",
    "source": "src.core.Query._match"
  },
  {
    "code": 55,
    "text": "Building path not supported for given mode (see above)",
    "source": "src.core.Query.build_path"
  },
  {
    "code": 56,
    "text": "Conflicting input arguments for std_fasc_diam and n_std_diam_limit for TRUNCNORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 57,
    "text": "lower_fasc_diam must be defined as >= 0 for TRUNCNORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 58,
    "text": "Conflicting input arguments for std_fasc_ecc and n_std_ecc_limit for TRUNCNORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 59,
    "text": "Mean eccentricity value exceeds 1. Eccentricity only defined in range [0,1) for TRUNCNORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 60,
    "text": "lower_fasc_diam bound must be positive length for UNIFORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 61,
    "text": "upper_fasc_diam bound must be >= lower_fasc_diam bound for UNIFORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 62,
    "text": "Ellipse eccentricity lower_fasc_ecc must be >= 0 for UNIFORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 63,
    "text": "Ellipse eccentricity upper_fasc_ecc must be < 1 for UNIFORM method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 64,
    "text": "Explicit fascicle positions are too close to each other, the nerve boundary, or are outside the boundary for EXPLICIT method",
    "source": "src.core.mock_sample"
  },
  {
    "code": 65,
    "text": "Length of fascicle colors list must match length of fascicles list.",
    "source": "src.core.Trace.plot"
  },
  {
    "code": 66,
    "text": "Query.run() must be called before calling analysis methods.",
    "source": "src.core.Query"
  },
  {
    "code": 67,
    "text": "There must be the same number of model indices and model labels",
    "source": "src.core.Query"
  },
  {
    "code": 68,
    "text": "Encountered multidimensional sim - ILLEGAL",
    "source": "src.core.Query.barcharts_compare_models"
  },
  {
    "code": 69,
    "text": "Inconsistent factor found in sims - ILLEGAL",
    "source": "src.core.Query.barcharts_compare_models"
  },
  {
    "code": 70,
    "text": "There must be the same number of sample indices and labels labels",
    "source": "src.core.Query.barcharts_compare_samples"
  },
  {
    "code": 71,
    "text": "An explicitly chosen fiber (x,y)-location (in explicit.txt) is not in any inner",
    "source": "src.core.Fiberset.generate"
  }
]